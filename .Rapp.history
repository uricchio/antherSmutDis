wilcox.test(Bott$V3,ExtBott$V3)
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.2.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.2.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.2.txt")->ExtBott
library(cowplot)
library(ggplot2)#
library(wesanderson)#
library(cowplot)
ggplot(Bott,aes(V1,V4))+geom_point(col='red')
ggplot(Bott,aes(V1,V4))+geom_point(col='red')+scale_axis_log_x()
ggplot(Bott,aes(V1,V4))+geom_point(col='red')+scale_x_continuous(trans='log2')
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.2.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.2.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.2.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
ggplot(Bott,aes(V1,V4))+geom_point(col='red')+scale_x_continuous(trans='log2')+scale_y_continuous(trans='log2')
ggplot(Bott,aes(V1,abs(V4)))+geom_point(col='red')+scale_x_continuous(trans='log2')+scale_y_continuous(trans='log2')
ggplot(Bott,aes(V1,V4)+geom_point(col='red')+scale_x_continuous(trans='log2')
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.2.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.2.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.2.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
ggplot(Bott,aes(V1,V4)+geom_point(col='red')+scale_x_continuous(trans='log2')
ggplot(Bott,aes(V1,V4))+geom_point(col='red')+scale_x_continuous(trans='log2')
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott
Bott
noBott
NoBott
ExtBott
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott
ggplot(Bott,aes(V1,V4))+geom_point(col='red')+scale_x_continuous(trans='log2')
ggplot(NoBott,aes(V1,V4))+geom_point(col='red')+scale_x_continuous(trans='log2')
hist(Bott$V4)
hist(Bott$V3)
hist(NoBott$V3)
hist(ExtBott$V3)
wilcox.test(Bott$V3,NoBott$V3)
wilcox.test(Bott$V3,ExtBott$V3)
df <-data.frame(N=Bott$V4,model="Bottleneck")
df
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V4,model="Bottleneck")#
df<rbind(df,data.frame(N=NoBott$V4,model="No bottleneck"))#
df<rbind(df,data.frame(N=ExtBott$V4,model="Extreme bottleneck"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V4,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V4,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V4,model="Extreme bottleneck"))
ggplot(df,aes(N,model))+geom_boxplot()
ggplot(df,aes(model,N))+geom_boxplot()
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
ggplot(df,aes(model,N))+geom_boxplot()
ggplot(df,aes(model,N))+geom_boxplot(fill='skyblue')
ggplot(df,aes(model,N))+geom_boxplot(fill='skyblue')+ylab(expression(italic(N) *" (population size)")) + xlab("")
ggplot(df,aes(model,N))+geom_violin(fill='skyblue')+ylab(expression(italic(N) *" (population size)")) + xlab("")
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
ggplot(df,aes(model,N))+geom_violin(fill=model)+ylab(expression(italic(N) *" (population size)")) + xlab("")
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
ggplot(df,aes(model,N,fill=model))+geom_violin()+ylab(expression(italic(N) *" (population size)")) + xlab("")
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")
ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")+scale_color_discrete(wes_palette="rushmore")
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")+wes_palette("rushmore")
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")+scale_color_manual(colors=wes_palette("darjeeling1"))
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")+scale_color_manual(colors=wes_palette("Darjeeling1"))
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")+scale_color_discrete(colors=wes_palette("Darjeeling1"))
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")+scale_color_discrete(values=wes_palette("Darjeeling1"))
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")
plA<-plA+scale_color_discrete(values=wes_palette("Darjeeling1"))
plA<-plA+scale_color_manual(values=wes_palette("Darjeeling1"))
plA
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_color_manual(values=wes_palette("Darjeeling1"))
plA
plA<-plA+scale_fill_manual(values=wes_palette("Darjeeling1"))
plA
plA<-plA+scale_fill_manual(values=wes_palette("Darjeeling2"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("Darjeeling2"))#
#
read.table()
plA
plA<-plA+scale_fill_manual(values=wes_palette("Bottlerocket2"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("Bottlerocket2"))#
#
read.table()
plA
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("BottleRocket2"))
plA
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))
plA
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc
ggplot(MCMC,aes(LeftYears.reasonable,Ne.reasonable))+geom_step()
ggplot(McMc,aes(LeftYears.reasonable,Ne.reasonable))+geom_step()
McMc
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt",header=T)->McMc
McMc
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc
ggplot(McMc,aes(LeftYears.reasonable,Ne.reasonable))+geom_step()
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
#
ggplot(McMc,aes(V2,V1))+geom_step()
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continous(trans="log10")
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10")
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10",limits=c("3,000","10,000","30,000","100,000"))+scale_y_continuous(trans="log10")
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10",limits=c(3000,10000,30000,100000))+scale_y_continuous(trans="log10")
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10",limits=c(3000,10000,30000,100000))+scale_y_continuous(trans="log10",limits=c(1000,10000,100000))
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10",limits=c(3000,10000,30000,100000)+scale_y_continuous(trans="log10",limits=c(1000,10000,100000))
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10",limits=c(3000,10000,30000,100000))+scale_y_continuous(trans="log10",limits=c(1000,10000,100000))
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
library(scales)
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")+ylab(expression(italic(N) * " (population size)"),labels=comma)+xlab(expression(italic(T) * " (years)"))
ggplot(McMc,aes(V2,V1))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
McMcAll<-data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="No Bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Extreme Bottleneck"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter_NoBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter_ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="No Bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Extreme Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(V2,V1,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="No Bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Extreme Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(V2,V1,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
plB
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="No Bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Extreme Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
plB
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No Bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
plB
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcXxtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McM$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McM$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))
plB
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))
plB
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))+theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),#
panel.grid.minor = element_blank()
)
plB
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step()+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))+theme_bw() + theme(panel.grid.major = element_blank(),#
panel.grid.minor = element_blank())
plB
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=2)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))
plB
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=1.3)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))
plB
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))
plB
plot_grid(plB,plA,labels="A","B")
plot_grid(plB,plA,labels="A","B",ncol=1)
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))#
plB<-plB+geom_line(data=McMc,aes(time,size,color=wes_palette("GrandBudapest2")[1]))
plB
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))#
plB<-plB+geom_line(data=McMc,aes(V2,V1,color=wes_palette("GrandBudapest2")[1]))
plB
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))#
plB<-plB+geom_step(data=McMc,aes(V2,V1,color=wes_palette("GrandBudapest2")[1]))#
#
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))#
plB<-plB+geom_step(data=McMc,aes(V2,V1,color=wes_palette("GrandBudapest2")[1]),lwd=0.8)#
#
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"),breaks=c(wes_palette("GrandBudapest2")[3],wes_palette("GrandBudapest2")[2],wes_palette("GrandBudapest2")[1]))
plB
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"),breaks=c(wes_palette("GrandBudapest2")[3],wes_palette("GrandBudapest2")[2],wes_palette("GrandBudapest2")[1]))#
plB<-plB+geom_step(data=McMc,aes(V2,V1,color=wes_palette("GrandBudapest2")[1]),lwd=0.8)
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"),breaks=c(wes_palette("GrandBudapest2")[3],wes_palette("GrandBudapest2")[2],wes_palette("GrandBudapest2")[1]))#
plB<-plB+geom_step(data=McMc,aes(V2,V1,color=wes_palette("GrandBudapest2")[1]),lwd=0.8)#
#
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))#
plB<-plB+geom_step(data=McMc,aes(V2,V1,color=wes_palette("GrandBudapest2")[1]),lwd=0.8)#
#
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
read.table("~/projects/alice/aliceSimsMasters/SSotter.Bott.3.txt")->Bott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.NoBott.3.txt")->NoBott#
read.table("~/projects/alice/aliceSimsMasters/SSotter.ExtBott.3.txt")->ExtBott#
#
library(ggplot2)#
library(wesanderson)#
library(cowplot)#
library(scales)#
#
df <-data.frame(N=Bott$V3,model="Bottleneck")#
df<-rbind(df,data.frame(N=NoBott$V3,model="No bottleneck"))#
df<-rbind(df,data.frame(N=ExtBott$V3,model="Extreme bottleneck"))#
#
plA<-ggplot(df,aes(model,N,fill=model))+geom_boxplot()+ylab(expression(italic(N) *" (population size)")) + xlab("")+theme(legend.position="none")#
plA<-plA+scale_fill_manual(values=wes_palette("GrandBudapest2"))#
#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.txt")->McMc#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.noBott.txt")->McMcNoBott#
read.table("~/projects/alice/sea_otter_data/MSMC_sea_otter.ExtBott.txt")->McMcExtBott#
#
McMcAll<-data.frame(time=McMcNoBott$V2,size=McMcNoBott$V1,model="No bottleneck")#
McMcAll<-rbind(McMcAll, data.frame(time=McMcExtBott$V2,size=McMcExtBott$V1,model="Extreme bottleneck"))#
McMcAll<-rbind(McMcAll, data.frame(time=McMc$V2,size=McMc$V1,model="Bottleneck"))#
#
plB<-ggplot(McMcAll,aes(time,size,color=model))+geom_step(lwd=0.8)+scale_x_continuous(trans="log10",labels=comma)+scale_y_continuous(trans="log10",labels=comma)+ylab(expression(italic(N) * " (population size)"))+xlab(expression(italic(T) * " (years)"))+scale_color_manual(values=wes_palette("GrandBudapest2"))#
#
plot_grid(plB,plA,labels=c("A","B"),ncol=1)
ggsave("~/projects/aliceSimsMasters/bottleneckModels.pdf",width=7.5,height=5.5)
ggsave("~/projects/alice/aliceSimsMasters/bottleneckModels.pdf",width=7.5,height=5.5)
plot_grid(plB,plA,labels=c("A","B"),ncol=1)#
ggsave("~/projects/alice/aliceSimsMasters/bottleneckModels.pdf",width=7.5,height=5.5)#
ggsave("~/projects/alice/aliceSimsMasters/bottleneckModels.png",width=7.5,height=5.5)
plot_grid(plB,plA,labels=c("A","B"),ncol=1)#
ggsave("~/projects/alice/aliceSimsMasters/bottleneckModels.pdf",width=7.5,height=5)#
ggsave("~/projects/alice/aliceSimsMasters/bottleneckModels.png",width=7.5,height=5)
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  #plot(t$V1#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
#
  #print (coef(M)[1])#
  #print(coef(M)[2])#
  #print(coef(M)[3])#
  #print(coef(M)[4])#
#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
  #  print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3])))#
}
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1)))    	#
	 } #
}
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='plasma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_color_viridis(option='plasma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))
library(ggplot2)
library(cowplot)
library(wesanderson)
library(viridis)
install.packages(viridis)
install.packages("viridis")
library(viridis)
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='plasma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))
pl2
cowplot(pl1,pl2,labels=c("A","B"))
plot_grid(pl1,pl2,labels=c("A","B"))
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# get correlations between Fh and unseen variables#
#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/col_corr.txt")->cc#
# Fh and Vh#
plot(cc$V1,cc$V3)#
lm(cc$V3~cc$V1)#
# Fh and Vd#
plot(cc$V1,cc$V4)#
lm(cc$V4~cc$V1)#
# Fh and J#
plot(cc$V1,cc$V5)#
lm(cc$V5~cc$V1)#
# get perf of inference assuming we know all relevant variables#
#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/simPerf.BestCase.txt")->sB#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/simPerf.Biased.txt")->sF#
#
sF<-sF[sF$V15!="Inf",]#
#
make_df<-function(s) {#
	df<-data.frame()#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="migSeeds",est=(s$V1[i]-s$V6[i])/s$V6[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="migSpores",est=(s$V2[i]-s$V7[i])/s$V7[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="betaF",est=(s$V3[i]-s$V8[i])/s$V8[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="betaV",est=(s$V4[i]-s$V9[i])/s$V9[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="betaJ",est=(s$V5[i]-s$V10[i])/s$V10[i]))#
	}#
	return(df)#
}#
#
df<-make_df(sB)#
#
plA<-ggplot(df,aes(x,est,fill=as.factor(x)))+geom_boxplot()+scale_fill_manual(values=wes_palette("Darjeeling1"))+geom_hline(yintercept=0,lty=3)+xlab("Parameter")+ylab("Bias")+theme(legend.position="none")+ylim(c(-1,5))#
#
# now assuming we know only Fh and Fd#
#
df<-make_df(sF)#
#
plB<-ggplot(df,aes(x,est,fill=as.factor(x)))+geom_boxplot()+scale_fill_manual(values=wes_palette("Darjeeling1"))+geom_hline(yintercept=0,lty=3)+xlab("Parameter")+ylab("Bias")+theme(legend.position="none")+ylim(c(-1,5))#
#
# now assuming we can't use Vn and Vd and j in the prob calcs#
#
plot_grid(plA,plB,labels=c("A","B"))
read.table("~/projects/bootslabOld/anther_smut/simAnthSmut/simPerf.BestCase.txt")->sB
read.table("~/projects/bootslabOld/anther_smut/simAnthSmut/simPerf.Biased.txt")->sF
sF<-sF[sF$V15!="Inf",]#
#
make_df<-function(s) {#
	df<-data.frame()#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="migSeeds",est=(s$V1[i]-s$V6[i])/s$V6[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="migSpores",est=(s$V2[i]-s$V7[i])/s$V7[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="betaF",est=(s$V3[i]-s$V8[i])/s$V8[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="betaV",est=(s$V4[i]-s$V9[i])/s$V9[i]))#
	}#
	for(i in seq(1,length(s$V1))) {#
		df<-rbind(df,data.frame(x="betaJ",est=(s$V5[i]-s$V10[i])/s$V10[i]))#
	}#
	return(df)#
}#
#
df<-make_df(sB)#
#
plA<-ggplot(df,aes(x,est,fill=as.factor(x)))+geom_boxplot()+scale_fill_manual(values=wes_palette("Darjeeling1"))+geom_hline(yintercept=0,lty=3)+xlab("Parameter")+ylab("Bias")+theme(legend.position="none")+ylim(c(-1,5))#
#
# now assuming we know only Fh and Fd#
#
df<-make_df(sF)#
#
plB<-ggplot(df,aes(x,est,fill=as.factor(x)))+geom_boxplot()+scale_fill_manual(values=wes_palette("Darjeeling1"))+geom_hline(yintercept=0,lty=3)+xlab("Parameter")+ylab("Bias")+theme(legend.position="none")+ylim(c(-1,5))#
#
# now assuming we can't use Vn and Vd and j in the prob calcs#
#
plot_grid(plA,plB,labels=c("A","B"))
# abundance over time#
#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/abundanceDensOnly.txt")->dens#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/abundanceDensOnlyNoQual.txt")->dens#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/abundanceDisInfParm.txt")->infer#
read.table("~/projects/bootslab/anther_smut/simAnthSmut/abundanceFreqOnly.txt")->freq#
#
plA<-ggplot(infer,aes(seq(1,980),V6))+geom_line(col='red')#
plB<-ggplot(freq,aes(seq(1,980),V6))+geom_line(col='red')#
#
plot_grid(plA,plB)
matrix([[0, 1.05, 1.05],[0.8, 0, 0],[0, 0.8, 0]])
matrix([0, 1.05, 1.05],[0.8, 0, 0],[0, 0.8, 0])
matrix(c([0, 1.05, 1.05],[0.8, 0, 0],[0, 0.8, 0]))
matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),nrow=3,ncol=3)
eig(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),nrow=3,ncol=3))
eigen(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),nrow=3,ncol=3))
eigen(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3))
matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)
t(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3))
eigen(t(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)))
t(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)) %*% matrix(c(8.4,0,6.4),ncol=1)
t(matrix(c(0, 1.05, 1.05, 0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)) %*% matrix(c(010,0,0),ncol=1)
t(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)) %*% matrix(c(8.4,0,6.4),ncol=1)
t(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)) %*% matrix(c(6.72,6.72,0),ncol=1)
14.8/8
t(matrix(c(0, 2, 0, 0.5), ncol=2,nrow=2))
t(matrix(c(0, 2, 0.5, 0.), ncol=2,nrow=2))
eigen(t(matrix(c(0, 2, 0.5, 0.), ncol=2,nrow=2)))
sum(t(matrix(c(0, 1.05, 1.05,0.8, 0, 0,0, 0.8, 0),ncol=3,nrow=3)) %*% matrix(c(6.72,6.72,0),ncol=1))
17.80/13.448
17.80/13.44
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  #plot(t$V1#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
#
  #print (coef(M)[1])#
  #print(coef(M)[2])#
  #print(coef(M)[3])#
  #print(coef(M)[4])#
#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
  #  print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3])))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1)))    	#
	 } #
}#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='plasma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
plot_grid(pl1,pl2,labels=c("A","B"))
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
get_data <-function(betaF,betaVJ,index,thresh) {#
	file = paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsForPlot/sim.betaF.",betaF,".betaVJ.",betaVJ,".txt",sep="")#
	read.table(file)->te#
	#print (te[,index])#
	me = mean(te[,index][te[,10]>thresh])#
	se = sd(te[,index][te[,10]>thresh])/sqrt(length(te[,index][te[,10]>thresh]))#
	return(list(me=me,su = me+se,sd=me-se))#
}#
#
index_list<-c(0.05,0.1,0.2,0.5,1,2,5,10,20)#
thresh<-2#
#
# first, disease persistence#
#
VJonly<-c()#
VJonlySU<-c()#
VJonlySD<-c()#
for (i in index_list) {#
 VJonly<-c(VJonly,get_data(0,i,10,thresh)$me)#
 VJonlySU<-c(VJonlySU,get_data(0,i,10,thresh)$su)#
 VJonlySD<-c(VJonlySD,get_data(0,i,10,thresh)$sd)#
#
}#
#
Fonly<-c()#
FonlySU<-c()#
FonlySD<-c()#
for (i in index_list) {#
 Fonly<-c(Fonly,get_data(i,0,10,thresh)$me)#
 FonlySU<-c(FonlySU,get_data(i,0,10,thresh)$su)#
 FonlySD<-c(FonlySD,get_data(i,0,10,thresh)$sd)#
}#
#
VJfixandF<-c()#
VJfixandFSU<-c()#
VJfixandFSD<-c()#
for (i in index_list) {#
 VJfixandF<-c(VJfixandF,get_data(i,1,10,thresh)$me)#
 VJfixandFSU<-c(VJfixandFSU,get_data(i,1,10,thresh)$su)#
 VJfixandFSD<-c(VJfixandFSD,get_data(i,1,10,thresh)$sd)#
}#
#
FfixandVJ<-c()#
FfixandVJSU<-c()#
FfixandVJSD<-c()#
for (i in index_list) {#
 FfixandVJ<-c(FfixandVJ,get_data(1,i,10,thresh)$me)#
 FfixandVJSU<-c(FfixandVJSU,get_data(1,i,10,thresh)$su)#
 FfixandVJSD<-c(FfixandVJSD,get_data(1,i,10,thresh)$sd)#
}#
df<-data.frame(x=index_list,y=VJonly,yd=VJonlySD,yu=VJonlySU,type=rep("VJ",9))#
df<-rbind(df,data.frame(x=index_list,y=Fonly,yd=FonlySD,yu=FonlySU,type=rep("F",9)))#
df<-rbind(df,data.frame(x=index_list,y=FfixandVJ,yd=FfixandVJSD,yu=FfixandVJSU,type=rep("F_VJ",9)))#
df<-rbind(df,data.frame(x=index_list,y=VJfixandF,yd=VJfixandFSD,yu=VJfixandFSU,type=rep("VJ_F",9)))#
plA<-ggplot(df,aes(x,y,col=type))+geom_point()+geom_line()+scale_x_log10(breaks=c(0.05,0.2,1,5,20))+scale_y_log10(breaks=c(5,10,50,100,500,1000),limits=c(5,1000))+geom_ribbon(aes(ymin=yd,ymax=yu,fill=type,col=type),linetype=0,alpha=0.3)+scale_color_manual(values=wes_palette("Moonrise3"))+scale_fill_manual(values=wes_palette("Moonrise3"))+xlab(expression(beta[rel]))+ylab(expression(italic(T) * " (duration)"))+theme(legend.position="NA")#
# next, extinction#
#
VJonly<-c()#
VJonlySU<-c()#
VJonlySD<-c()#
for (i in index_list) {#
 VJonly<-c(VJonly,get_data(0,i,11,thresh)$me)#
 VJonlySU<-c(VJonlySU,get_data(0,i,11,thresh)$su)#
 VJonlySD<-c(VJonlySD,get_data(0,i,11,thresh)$sd)#
#
}#
#
Fonly<-c()#
FonlySU<-c()#
FonlySD<-c()#
for (i in index_list) {#
 Fonly<-c(Fonly,get_data(i,0,11,thresh)$me)#
 FonlySU<-c(FonlySU,get_data(i,0,11,thresh)$su)#
 FonlySD<-c(FonlySD,get_data(i,0,11,thresh)$sd)#
}#
#
VJfixandF<-c()#
VJfixandFSU<-c()#
VJfixandFSD<-c()#
for (i in index_list) {#
 VJfixandF<-c(VJfixandF,get_data(i,1,11,thresh)$me)#
 VJfixandFSU<-c(VJfixandFSU,get_data(i,1,11,thresh)$su)#
 VJfixandFSD<-c(VJfixandFSD,get_data(i,1,11,thresh)$sd)#
}#
#
FfixandVJ<-c()#
FfixandVJSU<-c()#
FfixandVJSD<-c()#
for (i in index_list) {#
 FfixandVJ<-c(FfixandVJ,get_data(1,i,11,thresh)$me)#
 FfixandVJSU<-c(FfixandVJSU,get_data(1,i,11,thresh)$su)#
 FfixandVJSD<-c(FfixandVJSD,get_data(1,i,11,thresh)$sd)#
}#
#
df<-data.frame(x=index_list,y=VJonly,yd=VJonlySD,yu=VJonlySU,type=rep("VJ",9))#
df<-rbind(df,data.frame(x=index_list,y=Fonly,yd=FonlySD,yu=FonlySU,type=rep("F",9)))#
df<-rbind(df,data.frame(x=index_list,y=FfixandVJ,yd=FfixandVJSD,yu=FfixandVJSU,type=rep("F_VJ",9)))#
df<-rbind(df,data.frame(x=index_list,y=VJfixandF,yd=VJfixandFSD,yu=VJfixandFSU,type=rep("VJ_F",9)))#
plB<-ggplot(df,aes(x,y,col=type))+geom_point()+geom_line()+scale_x_log10(breaks=c(0.05,0.2,1,5,20))+geom_ribbon(aes(ymin=yd,ymax=yu,fill=type,col=type),linetype=0,alpha=0.3)+scale_color_manual(values=wes_palette("Moonrise3"),name="",#
                       labels=c(expression(beta[F] * " = 0, " * beta[VJ] * " = " * beta[rel]), expression(beta[F] * " = " * beta[rel] * ", " * beta[VJ] * " = 0"), expression(beta[F] * " = 1, " * beta[VJ] * " = " * beta[rel]), expression(beta[F] * " = " * beta[rel] * ", " * beta[VJ] * " = 1")))+scale_fill_manual(values=wes_palette("Moonrise3"),name="",#
                       labels=c(expression(beta[F] * " = 0, " * beta[VJ] * " = " * beta[rel]), expression(beta[F] * " = " * beta[rel] * ", " * beta[VJ] * " = 0"), expression(beta[F] * " = 1, " * beta[VJ] * " = " * beta[rel] ), expression(beta[F] * " = " * beta[rel] * ", " * beta[VJ] * " = 1")))+xlab(expression(beta[rel]))+ylab(expression(italic(P) * " (persistence)"))#
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)#
ggsave("~/projects/bootslab/anther_smut/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
#data_plot<-data[data$m<300,]#
#
#pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
# proportion of simulations within the grid point that had greater slope than the observed#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
# proportion #
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
library(viridis)
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
ggsave("~/projects/bootslab/anther_smut/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
ggsave("~/projects/bootslabOld/manuscript/v2/anther_smut/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
ggsave("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig3.pdf",height=4.5,width=8)
point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
library(boot)#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#quad quality#
head(dat,1) #
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05#
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5#
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15#
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15#
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12#
#  Tp.18#
 # creating a data frame for each sampled year from 2005 to 2018#
 # Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc#
 # prevalence is just the mean #
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))#
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))#
#
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))#
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))#
#
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))#
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))#
#
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))#
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))#
#
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))#
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))#
# combining all the data#
df<-rbind(df0,df1,df2,df3,df4)#
#
# plotting the data #
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
plA#
#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig4.pdf",height=5,width=7)
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/simAnthSmut/figures/Fig3.pdf",height=4.5,width=8)
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig3.pdf",height=4.5,width=8)
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig4.pdf",height=5,width=7)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
library(boot)#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#quad quality#
head(dat,1) #
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05#
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5#
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15#
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15#
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12#
#  Tp.18#
 # creating a data frame for each sampled year from 2005 to 2018#
 # Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc#
 # prevalence is just the mean #
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))#
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))#
#
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))#
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))#
#
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))#
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))#
#
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))#
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))#
#
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))#
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))#
# combining all the data#
df<-rbind(df0,df1,df2,df3,df4)#
#
# plotting the data #
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
plA#
#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig4.pdf",height=5,width=7)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig3.pdf",height=4.5,width=8)
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig3New.pdf",height=4.5,width=8)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig3New.pdf",height=4.5,width=8)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
library(boot)#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#quad quality#
head(dat,1) #
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05#
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5#
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15#
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15#
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12#
#  Tp.18#
 # creating a data frame for each sampled year from 2005 to 2018#
 # Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc#
 # prevalence is just the mean #
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))#
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))#
#
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))#
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))#
#
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))#
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))#
#
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))#
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))#
#
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))#
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))#
# combining all the data#
df<-rbind(df0,df1,df2,df3,df4)#
#
# plotting the data #
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
plA#
#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig4New.pdf",height=5,width=7)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig2New.pdf",height=4.5,width=8)
#install.packages("mgcv") # only need to do this once ever#
library("mgcv") # only need to load this once per session#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
setwd("~/Dropbox/Transect Simulation/data") # point to wherever you're data files are#
dat<- read.csv("Transect 1 all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)#
ggsave("~/projects/bootslab/anther_smut/simAnthSmut/figures/fig1New.pdf",width=7,height=11)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
library(boot)#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#quad quality#
head(dat,1) #
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05#
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5#
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15#
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15#
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12#
#  Tp.18#
 # creating a data frame for each sampled year from 2005 to 2018#
 # Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc#
 # prevalence is just the mean #
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))#
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))#
#
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))#
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))#
#
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))#
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))#
#
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))#
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))#
#
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))#
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))#
# combining all the data#
df<-rbind(df0,df1,df2,df3,df4)#
#
# plotting the data #
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
plA#
#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig4New.pdf",height=5,width=7)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig3New.pdf",height=4.5,width=8)
#install.packages("mgcv") # only need to do this once ever#
library("mgcv") # only need to load this once per session#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
setwd("~/Dropbox/Transect Simulation/data") # point to wherever you're data files are#
dat<- read.csv("Transect 1 all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)#
ggsave("~/projects/bootslab/anther_smut/simAnthSmut/figures/fig1New.pdf",width=7,height=11)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig2New.pdf",height=4.5,width=8)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig2New.pdf",height=4.5,width=8)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig2New.pdf",height=4.5,width=8)
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
#data_plot<-data[data$m<300,]#
#
#pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
# proportion of simulations within the grid point that had greater slope than the observed#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
# proportion of sims with any surviving at 1000 generations#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)#
ggsave("~/projects/bootslabOld/anther_smut/manuscript/v2/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
read.table(paste("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/manuscript/v2/software/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
#data_plot<-data[data$m<300,]#
#
#pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
# proportion of simulations within the grid point that had greater slope than the observed#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
# proportion of sims with any surviving at 1000 generations#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/manuscript/v2/software/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
#data_plot<-data[data$m<300,]#
#
#pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
# proportion of simulations within the grid point that had greater slope than the observed#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
# proportion of sims with any surviving at 1000 generations#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[d],beta[d[0]])))+ylab(expression(frac(beta[f],beta[f[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("~/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
warnings()
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",1,".txt",sep=""))
read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",2,".txt",sep=""))
read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",2,".txt",sep=""))
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,15000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}
warnings()
plotAndGetMaxSlope<-function(i) {	#
#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}
data <-data.frame()#
emp<-0#
for ( i in seq(1,100)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}
warnings()
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,100)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,100)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,100)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,5000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}
library(viridis)
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,5000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)#
ggsave("~/projects/bootslab/anther_smut/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,20000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)#
ggsave("~/projects/bootslab/anther_smut/simAnthSmut/figures/figSim.pdf",width=7.5*1.3,height=2.8*1.3)
# max change in abundance / year in data is (1409-504)/(18-14) = 226.25#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
library(viridis)#
#
plotAndGetMaxSlope<-function(i) {	#
#
  read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  #read.table(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""))->t#
  #scan(paste("/Users/uricchio/projects/bootslabOld/anther_smut/simAnthSmut/simsRepGenRandHigh/sim.",i,".txt",sep=""),nlines=1,what=c("a"))->params#
  # if epidemic is shorter than actual, skip#
  if(length(t$V1) < 10 ) {#
  	return (NA)#
  }#
  len=min(length(t$V1),1000)#
  yvals = (t$V1+t$V2)[1:len]#
  popSize<-data.frame(x=seq(1,len),y=yvals)#
#
   M<-nls(y~y0/(1+exp(-r*(x-x0)))+ym, start=list(r=0.2,y0=-(max(yvals)),x0=20,ym=max(yvals)),data=popSize,trace=FALSE,lower=c(0.01,-10000,0.01,0.01),algorithm="port"#
,control = nls.control(minFactor = 1/10000000,maxiter=1000,warnOnly=TRUE))#
  M.df<-data.frame(x=seq(1,len))#
  # y = a / (1 + exp(-b *(x-x0))) + c#
  M.df$y<-coef(M)[2]/(1+exp(-coef(M)[1]*(M.df$x-coef(M)[3])))+coef(M)[4]#
#
  # Deriv is (a b E^(b (x + x0)))/(E^(b x) + E^(b x0))^2 which is maximized at x0, with a value of a*b/4#
  myMax = c(t(t(abs(coef(M)[2]*coef(M)[1]/4))))#
  #if(myMax > 100) {#
    #print(myMax)#
    #print(coef(M)[3])#
    #p<-ggplot(data=popSize,aes(x,y),alpha=0.5)+geom_point()+ylim(c(0,2500))+geom_line(data=M.df,col='red',size=0.7)#
    #p+xlim(1,len)#
    #print(p)#
  #}#
  tot_final = sum(t[len,][1:5],na.rm=T)#
  print(tot_final)#
  if(tot_final > 0) {#
  	tot_final = 1#
  	}#
  return(data.frame(m=myMax,a=as.numeric(params[2]),b=as.numeric(params[3]),l=len,t=tot_final))#
}#
#
data <-data.frame()#
emp<-0#
for ( i in seq(1,20000)) {#
	m<-plotAndGetMaxSlope(i)#
	if(is.na(m)) {#
		emp<-emp+1#
	} else {#
	    data<-rbind(data,m)#
	}#
}#
#
data_plot<-data[data$m<300,]#
#
pl1<-ggplot(data_plot,aes(a,b))+ geom_bin2d(binwidth=c(1,1),aes(fill=cut(m,seq(0,300,15))))+scale_fill_manual(values=wes_palette("Zissou1",21,type="continuous"))#
myPdf<-function(df,at,bt,bw) {#
	if (length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m) == 0) {#
		return(0)#
	}#
	return(length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw & df$m >226.25,]$m)/length(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw,]$m))#
}#
#
myldf<-function(df,at,bt,bw) {#
	return(mean(df[df$a>at & df$b>bt & df$a<at+bw & df$b<bt+bw ,]$t,na.rm=T))#
}#
pdf<-data.frame()#
for (i in seq(0,19,1)) {#
	 for (j in seq(0,19,1)) {#
	     pdf<-rbind(pdf,data.frame(a=i,b=j,f=myPdf(data_plot,i,j,1),t=myldf(data_plot,i,j,1)))    	#
	 } #
}#
#
pl2<-ggplot(pdf,aes(a,b,color=f))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='viridis',name=expression(italic(F)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
#
pl3<-ggplot(pdf,aes(a,b,color=t))+ geom_point(shape=15,size=5)+scale_colour_viridis(option='magma',name=expression(italic(P)))+xlab(expression(frac(beta[VJ],beta[VJ[0]])))+ylab(expression(frac(beta[F],beta[F[0]])))#
plot_grid(pl2,pl3,labels=c("A","B"),rel_widths=c(1,1),ncol=2)
#install.packages("mgcv") # only need to do this once ever#
library("mgcv") # only need to load this once per session#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
setwd("~/Dropbox/Transect Simulation/data") # point to wherever you're data files are#
dat<- read.csv("Transect 1 all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)
# concept figure for spatial model#
library(cowplot)#
library(ggplot2)#
#
# replace with your directory path #
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/plottingScripts")#
#
read.table("../data/empDensData.txt")->gr#
read.table("../exampleData/simExample.txt")->gs#
read.table("../exampleData/qualExample.txt")->qs#
#
p1<-ggplot(gr, aes(V1, V2, fill = V6))+geom_tile(color = "gray")+ylab("")+xlab("")+scale_fill_gradient2(low = "blue", high = "yellow", mid = "white", midpoint = 8,name="Abundance")#
#
p2<-ggplot(gs, aes(V2+1	, V1+1, fill = V3))+geom_tile(color = "white")+ylab(expression("y-coord. (" * italic(m) * ")"))+xlab("")+scale_fill_gradient2(low = "blue", high = "yellow", mid = "white", midpoint = 14,name="Abundance")#
p3<-ggplot(qs, aes(V2+1	, V1+1, fill = V3))+geom_tile(color = "white")+xlab(expression("x-coord. (" * italic(m) * ")"))+ylab("")+scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0.5,name="Quality       ")#
 myGrid<-plot_grid(p1,p2,p3,ncol=1)
myGrid
# concept figure for spatial model#
library(cowplot)#
library(ggplot2)#
#
# replace with your directory path #
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/plottingScripts")#
#
read.table("../data/empDensData.txt")->gr#
read.table("../exampleData/simExample.txt")->gs#
read.table("../exampleData/qualExample.txt")->qs#
#
p1<-ggplot(gr, aes(V1, V2, fill = V6))+geom_tile(color = "gray")+ylab("")+xlab("")+scale_fill_gradient2(low = "blue", high = "yellow", mid = "white", midpoint = 8,name="Abundance")#
#
p2<-ggplot(gs, aes(V2+1	, V1+1, fill = V3))+geom_tile(color = "white")+ylab(expression("y-coord. (" * italic(m) * ")"))+xlab("")+scale_fill_gradient2(low = "blue", high = "yellow", mid = "white", midpoint = 14,name="Abundance")#
p3<-ggplot(qs, aes(V2+1	, V1+1, fill = V3))+geom_tile(color = "white")+xlab(expression("x-coord. (" * italic(m) * ")"))+ylab("")+scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0.5,name="Quality       ")#
 myGrid<-plot_grid(p1,p2,p3,ncol=1)#
 ggsave("~/projects/bootslabOld/anther_smut/simAnthSmut/manuscript/v2/figures/ConcepFig.pdf",myGrid,width=7,height=6)
ggsave("~/projects/bootslabOld/anther_smut/manuscript/v2/figures/ConcepFig.pdf",myGrid,width=7,height=6)
#install.packages("mgcv") # only need to do this once ever#
library("mgcv") # only need to load this once per session#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
setwd("~/Dropbox/Transect Simulation/data") # point to wherever you're data files are#
dat<- read.csv("Transect 1 all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)#
 ggsave("~/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig2.pdf",myGrid,width=7,height=6)
#install.packages("mgcv") # only need to do this once, if you haven't installed the package#
library("mgcv") #
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
# not needed to make the figure, I'm retaining this (ugly) code since I used some of these internally#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)
#install.packages("mgcv") # only need to do this once, if you haven't installed the package#
library("mgcv") #
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
# not needed to make the figure, I'm retaining this (ugly) code since I used some of these internally#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)
#install.packages("mgcv") # only need to do this once, if you haven't installed the package#
library("mgcv") #
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
attach(dat)#
##DENSITY######################################
dens.05=round(Dp.05+HHp.05+MSp.05+Up.05,0)#
dens.07=Dp.07+HHp.07+MSp.07+Up.07#
dens.14=Dp.14+HHp.14+MSp.14+Up.14#
dens.15=Dp.15+HHp.15+MSp.15+Up.15 #
dens.18=Dp.18+HHp.18+MSp.18+Up.18#
dens.data=as.matrix(cbind(Xplot, Yplot, dens.05, dens.07, dens.14, dens.15, dens.18))#
dens.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=dens.05))#
dens.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=dens.15))#
dens.data.14=data.frame(cbind(x=Xplot,y=Yplot, z=dens.14))#
dens.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=dens.07))#
dens.data.18=data.frame(cbind(x=Xplot,y=Yplot, z=dens.18))#
dis.data.05=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.05))#
dis.data.07=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.07))#
dis.data.18=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.18))#
dis.data.14=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.14))#
dis.data.15=data.frame(cbind(x=Xplot, y=Yplot, z=Dp.15))#
# code block for printing out summary files of Fh,Fd, etc#
# not needed to make the figure, I'm retaining this (ugly) code since I used some of these internally#
#for (i in seq(1,length(dens.data.05$x))) {#
#    write (c(dens.data.05$x[i],dens.data.05$y[i],dens.data.05$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.05.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dis.data.05$x))) {#
#    write (c(dis.data.05$x[i],dis.data.05$y[i],dis.data.05$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.05.txt", append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.07$x))) {#
#    write (c(dens.data.07$x[i],dens.data.07$y[i],dens.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.07.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.07$x))) {#
#    write (c(dis.data.07$x[i],dis.data.07$y[i],dis.data.07$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.07.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.18$x))) {#
#    write (c(dens.data.18$x[i],dens.data.18$y[i],dens.data.18$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.18.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.18$x))) {#
#    write (c(dis.data.18$x[i],dis.data.18$y[i],dis.data.18$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.18.txt",append=TRUE)#
#}#
##
#for (i in seq(1,length(dens.data.14$x))) {#
#    write (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)#
#}#
#for (i in seq(1,length(dens.data.15$x))) {#
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))#
#}#
#for (i in seq(1,length(dis.data.15$x))) {#
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))#
#}#
#for (i in seq(1,length(dens.data.14$x))) {#
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))#
#}#
#for (i in seq(1,length(dis.data.14$x))) {#
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))#
#}#
#quit()#
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
#
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))#
#
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
Set.05=as.matrix(cbind(dens.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=0.25)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(dens.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=0.25)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))#
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=0.25) #
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))#
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=0.25)#
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))#
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=0.25)#
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))#
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#KRUMMHOLZ########################### #
krumr.05=100*(Krum.05+Rock.05)#
krumr.05=ifelse(krumr.05>100,100,krumr.05)#
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)#
krumr.07=Krum.07+Rock.07#
krumr.07=ifelse(krumr.07>100,100,krumr.07)#
krumr.14=Krum.14+Rock.07#
krumr.14=ifelse(krumr.14>100,100,krumr.14)#
krumr.15=Krum.15+Rock.07 #
krumr.15=ifelse(krumr.15>100,100,krumr.15)#
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))#
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)#
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))#
# no data for 2018#
#
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
knots=30#
gampar=0.25#
Set.05=as.matrix(cbind(krumr.05,Xplot))#
Set.05=Set.05[!is.na(Set.05[,1]),]#
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)#
predgam.05=predict.gam(mod.05);#
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))#
Set.07=as.matrix(cbind(krumr.07,Xplot))#
Set.07=Set.07[!is.na(Set.07[,1]),]#
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20#
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))#
Set.14=as.matrix(cbind(krumr.14,Xplot))#
Set.14=Set.14[!is.na(Set.14[,1]),]	#
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)#
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))#
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)#
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)#
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))#
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#PREVALENCE###########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T) #
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.transect=dis.transect/dens.transect#
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))#
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))#
#
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))#
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))#
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))#
prev.data=dis.data/dens.data#
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])#
Pset.05=Pset.05[complete.cases(Pset.05),] #
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=0.25) #
predgam.05=predict.gam(mod.05);#
back=exp(predgam.05)/(1+exp(predgam.05))#
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))#
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])#
Pset.07=Pset.07[complete.cases(Pset.07),] #
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=0.25) #
predgam.07=predict.gam(mod.07);#
back=exp(predgam.07)/(1+exp(predgam.07))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))#
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])#
Pset.14=Pset.14[complete.cases(Pset.14),] #
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=0.25) #
predgam.14=predict.gam(mod.14);#
back=exp(predgam.14)/(1+exp(predgam.14))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))#
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])#
Pset.15=Pset.15[complete.cases(Pset.15),] #
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=0.25) #
predgam.15=predict.gam(mod.15);#
back=exp(predgam.15)/(1+exp(predgam.15))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))#
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])#
Pset.18=Pset.18[complete.cases(Pset.18),] #
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=0.25) #
predgam.18=predict.gam(mod.18);#
back=exp(predgam.18)/(1+exp(predgam.18))#
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))#
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("disease prevalence"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
df <- data.frame()#
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank(),legend.position="none",#
          panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),#
          panel.grid.minor=element_blank(),plot.background=element_blank())#
#
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))#
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))#
#
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig2.pdf",width=7,height=11)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig3.pdf",height=4.5,width=8)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig3.pdf",height=4.5,width=8)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
head(dat)#
#
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and#
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not #
# included.#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#
# this is just a list of the names of the variables in the file#
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05  #
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14#
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15#
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18#
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18#
attach(dat)#
######################################
col05="dark gray";#
col07="brown";#
col14="blue";#
col15="dark green";#
col18="red";#
# get the 05 data. Tp is total plants#
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05#
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.#
krumave=tapply(dat$Tp.05,krumclass,mean)#
krumcount=tapply(dat$Tp.05,krumclass,length)#
# xpoints are the distances along the linear transect in meters#
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)#
# model of plant abundance as function of krummholz#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col05,lwd=2)#
summary(mod1)#
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))#
#
# now same for 07#
krumclass=(trunc(dat$Krum.07/10))*10#
krumave=tapply(dat$Tp.07,krumclass,mean)#
krumcount=tapply(dat$Tp.07,krumclass,length)#
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col07,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))#
# now same for 14#
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14#
krumclass=(trunc(dat$Krum.14/10))*10#
krumave=tapply(dat$Tp.14,krumclass,mean)#
krumcount=tapply(dat$Tp.14,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col14,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))#
# now same for 15#
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15 #
krumclass=(trunc(dat$Krum.15/10))*10#
krumave=tapply(dat$Tp.15,krumclass,mean)#
krumcount=tapply(dat$Tp.15,krumclass,length)#
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)#
pred1=predict(mod1,type="response")#
lines(xpoints,pred1,col=col15,lwd=2)#
summary(mod1)#
#
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))#
#
 #now plot all the data#
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
library(boot)#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#quad quality#
head(dat,1) #
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05#
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5#
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15#
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15#
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12#
#  Tp.18#
 # creating a data frame for each sampled year from 2005 to 2018#
 # Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc#
 # prevalence is just the mean #
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))#
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))#
#
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))#
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))#
#
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))#
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))#
#
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))#
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))#
#
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))#
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))#
# combining all the data#
df<-rbind(df0,df1,df2,df3,df4)#
#
# plotting the data #
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
plA#
#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/figures/Fig4New.pdf",height=5,width=7)
# point to wherever your data files are#
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/") #
dat<- read.csv("data/Transect_1_all.csv", header=T)#
library(boot)#
library(ggplot2)#
library(cowplot)#
library(wesanderson)#
#quad quality#
head(dat,1) #
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05#
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5#
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15#
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15#
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12#
#  Tp.18#
 # creating a data frame for each sampled year from 2005 to 2018#
 # Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc#
 # prevalence is just the mean #
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))#
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))#
#
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))#
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))#
#
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))#
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))#
#
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))#
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))#
#
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))#
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))#
# combining all the data#
df<-rbind(df0,df1,df2,df3,df4)#
#
# plotting the data #
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),#
panel.background = element_blank(), axis.line = element_line(colour = "black"))#
#
plA#
#
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig4.pdf",height=5,width=7)
