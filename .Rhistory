#}
#for (i in seq(1,length(dis.data.14$x))) {
#    write (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.14.txt",append=TRUE)
#}
#for (i in seq(1,length(dens.data.15$x))) {
#    write (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]), file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dens.15.txt",append=TRUE)
#}
#for (i in seq(1,length(dis.data.15$x))) {
#    write (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]),file="/Users/uricchio/projects/bootslab/anther_smut/simAnthSmut/data/dis.15.txt",append=TRUE)
#}
#for (i in seq(1,length(dens.data.15$x))) {
#    print (c(dens.data.15$x[i],dens.data.15$y[i],dens.data.15$z[i]))
#}
#for (i in seq(1,length(dis.data.15$x))) {
#    print (c(dis.data.15$x[i],dis.data.15$y[i],dis.data.15$z[i]))
#}
#for (i in seq(1,length(dens.data.14$x))) {
#    print (c(dens.data.14$x[i],dens.data.14$y[i],dens.data.14$z[i]))
#}
#for (i in seq(1,length(dis.data.14$x))) {
#    print (c(dis.data.14$x[i],dis.data.14$y[i],dis.data.14$z[i]))
#}
#quit()
dens.transect=aggregate(dens.data[,c(3:7)], by=list(Xplot), mean, na.rm=T)
df<-data.frame(x=c(1:100),y=dens.transect[,2],year=rep("2005",100))
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,3],year=rep("2007",100)))
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,4],year=rep("2014",100)))
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,5],year=rep("2015",100)))
df<-rbind(df,data.frame(x=c(1:100),y=dens.transect[,6],year=rep("2018",100)))
plA<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))
Set.05=as.matrix(cbind(dens.05,Xplot))
Set.05=Set.05[!is.na(Set.05[,1]),]
mod.05 <-gam(Set.05[,1]~s(Set.05[,2]),family=poisson,gamma=gampar)
predgam.05=predict.gam(mod.05);
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(exp(predgam.05))))),year=rep("2005",length(unique(Set.05[,2]))))
Set.07=as.matrix(cbind(dens.07,Xplot))
Set.07=Set.07[!is.na(Set.07[,1]),]
mod.07 <-gam(Set.07[,1]~s(Set.07[,2]),family=poisson,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], exp(predgam.07),col="black",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(exp(predgam.07))))),year=rep("2007",length(unique(Set.07[,2])))))
mod.14 <-gam(dens.14~s(Xplot),family=poisson,gamma=gampar)
predgam.14=predict.gam(mod.14);#lines(Xplot, exp(predgam.14),col="dark green",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.14))))),year=rep("2014",100)))
mod.15 <-gam(dens.15~s(Xplot),family=poisson,gamma=gampar)
predgam.15=predict.gam(mod.15);#lines(Xplot, exp(predgam.15),col="brown",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.15))))),year=rep("2015",100)))
mod.18 <-gam(dens.18~s(Xplot),family=poisson,gamma=gampar)
predgam.18=predict.gam(mod.18);#lines(Xplot, exp(predgam.18),col="red",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(exp(predgam.18))))),year=rep("2018",100)))
plA<-plA+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,15))+xlab("position (m)")+ylab(expression("Density per " * m^2))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#KRUMMHOLZ###########################
krumr.05=100*(Krum.05+Rock.05)
krumr.05=ifelse(krumr.05>100,100,krumr.05)
Rock.07 =ifelse(is.na(Rock.07),0,Rock.07)
krumr.07=Krum.07+Rock.07
krumr.07=ifelse(krumr.07>100,100,krumr.07)
krumr.14=Krum.14+Rock.07
krumr.14=ifelse(krumr.14>100,100,krumr.14)
krumr.15=Krum.15+Rock.07
krumr.15=ifelse(krumr.15>100,100,krumr.15)
krum.data=as.matrix(cbind(Xplot, Yplot, krumr.05, krumr.07, krumr.14, krumr.15))
krumr.transect=aggregate(krum.data[,c(3:6)], by=list(Xplot), mean, na.rm=T)
df<-data.frame(x=c(1:100),y=krumr.transect[,2],year=rep("2005",100))
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,3],year=rep("2007",100)))
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,4],year=rep("2014",100)))
df<-rbind(df,data.frame(x=c(1:100),y=krumr.transect[,5],year=rep("2015",100)))
# no data for 2018
plB<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))
Set.05=as.matrix(cbind(krumr.05,Xplot))
Set.05=Set.05[!is.na(Set.05[,1]),]
mod.05 <-gam(Set.05[,1]~s(Set.05[,2],k=knots/2),family=gaussian, gamma=gampar)
predgam.05=predict.gam(mod.05);
dfFit<-data.frame(x=unique(Set.05[,2]),y=c(t(t(unique(predgam.05)))),year=rep("2005",length(unique(Set.05[,2]))))
Set.07=as.matrix(cbind(krumr.07,Xplot))
Set.07=Set.07[!is.na(Set.07[,1]),]
mod.07 <-gam(Set.07[,1]~s(Set.07[,2],k=knots),family=gaussian,gamma=gampar)  #unused model parameters:  ,bs="cr",k=20
predgam.07=predict.gam(mod.07); #lines(Set.07[,2], predgam.07,col="black",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Set.07[,2]),y=c(t(t(unique(predgam.07)))),year=rep("2007",length(unique(Set.07[,2])))))
Set.14=as.matrix(cbind(krumr.14,Xplot))
Set.14=Set.14[!is.na(Set.14[,1]),]
mod.14 <-gam(Set.14[,1]~s(Set.14[,2],k=knots),family=gaussian, gamma=gampar)
predgam.14=predict.gam(mod.14);#lines(Set.14[,2], predgam.14,col="dark green",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Set.14[,2]),y=c(t(t(unique(predgam.14)))),year=rep("2014",length(unique(Set.14[,2])))))
mod.15 <-gam(krumr.15~s(Xplot,k=knots),family=gaussian, gamma=gampar)
predgam.15=predict.gam(mod.15);#lines(Xplot, predgam.15,col="brown",lwd=2)
dfFit<-rbind(dfFit,data.frame(x=unique(Xplot),y=c(t(t(unique(predgam.15)))),year=rep("2015",length(unique(Xplot)))))
plB<-plB+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+scale_y_continuous(limits=c(0,105))+xlab("position (m)")+ylab(expression("% cover Krummholz"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#PREVALENCE##########################################################
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))
dis.transect=aggregate(dis.data[,c(3:7)], by=list(Xplot), mean, na.rm=T)
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))
prev.transect=dis.transect/dens.transect
df<-data.frame(x=c(1:100),y=prev.transect[,2],year=rep("2005",100))
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,3],year=rep("2007",100)))
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,4],year=rep("2014",100)))
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,5],year=rep("2015",100)))
df<-rbind(df,data.frame(x=c(1:100),y=prev.transect[,6],year=rep("2018",100)))
plC<-ggplot(df,aes(x,y,col=year))+geom_point(alpha=0.3)+scale_color_manual(values=wes_palette("Darjeeling2"))
dis.data=as.matrix(cbind(Xplot, Yplot, round(Dp.05,0), Dp.07, Dp.14, Dp.15, Dp.18))
dens.data=as.matrix(cbind(Xplot, Yplot,dens.05, dens.07, dens.14, dens.15, dens.18))
prev.data=dis.data/dens.data
Pset.05=cbind(Xplot,prev.data[,3],dens.data[,3])
Pset.05=Pset.05[complete.cases(Pset.05),]
mod.05 <-gam(Pset.05[,2]~s(Pset.05[,1]),family=binomial(link="logit"),weights=Pset.05[,3],gamma=gampar)
predgam.05=predict.gam(mod.05);
back=exp(predgam.05)/(1+exp(predgam.05))
dfFit<-data.frame(x=unique(Pset.05[,1]),y=c(t(t(unique(back)))),year=rep("2005",length(unique(Pset.05[,1]))))
Pset.07=cbind(Xplot,prev.data[,4],dens.data[,4])
Pset.07=Pset.07[complete.cases(Pset.07),]
mod.07 <-gam(Pset.07[,2]~s(Pset.07[,1]),family=binomial(link="logit"),weights=Pset.07[,3],gamma=gampar)
predgam.07=predict.gam(mod.07);
back=exp(predgam.07)/(1+exp(predgam.07))
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.07[,1]),y=c(t(t(unique(back)))),year=rep("2007",length(unique(Pset.07[,1])))))
Pset.14=cbind(Xplot,prev.data[,5],dens.data[,5])
Pset.14=Pset.14[complete.cases(Pset.14),]
mod.14 <-gam(Pset.14[,2]~s(Pset.14[,1]),family=binomial(link="logit"),weights=Pset.14[,3],gamma=gampar)
predgam.14=predict.gam(mod.14);
back=exp(predgam.14)/(1+exp(predgam.14))
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.14[,1]),y=c(t(t(unique(back)))),year=rep("2014",length(unique(Pset.14[,1])))))
Pset.15=cbind(Xplot,prev.data[,6],dens.data[,6])
Pset.15=Pset.15[complete.cases(Pset.15),]
mod.15 <-gam(Pset.15[,2]~s(Pset.15[,1]),family=binomial(link="logit"),weights=Pset.15[,3],gamma=gampar)
predgam.15=predict.gam(mod.15);
back=exp(predgam.15)/(1+exp(predgam.15))
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.15[,1]),y=c(t(t(unique(back)))),year=rep("2015",length(unique(Pset.15[,1])))))
Pset.18=cbind(Xplot,prev.data[,7],dens.data[,7])
Pset.18=Pset.18[complete.cases(Pset.18),]
mod.18 <-gam(Pset.18[,2]~s(Pset.18[,1]),family=binomial(link="logit"),weights=Pset.18[,3],gamma=gampar)
predgam.18=predict.gam(mod.18);
back=exp(predgam.18)/(1+exp(predgam.18))
dfFit<-rbind(dfFit,data.frame(x=unique(Pset.18[,1]),y=c(t(t(unique(back)))),year=rep("2018",length(unique(Pset.18[,1])))))
plC<-plC+geom_line(data=dfFit,aes(x,y,col=year),size=0.8)+xlab("position (m)")+ylab(expression("pathogen prevalence"))+theme(legend.position="NA")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
df <- data.frame()
plBl<-ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 100)+theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
row2<-plot_grid(plB,plBl,rel_widths=c(1,0.18),labels=c("B",""))
row3<-plot_grid(plC,plBl,rel_widths=c(1,0.18),labels=c("C",""))
plot_grid(plA,row2,row3,labels=c("A","",""),ncol=1)
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig2.pdf",width=7,height=11)
#ggsave("~/Documents/CV/app/2019/boise/ConceptFigPlotsForApp.pdf",width=7,height=11*2/3)
# point to wherever your data files are
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/")
dat<- read.csv("data/Transect_1_all.csv", header=T)
head(dat)
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not
# included.
library(ggplot2)
library(cowplot)
library(wesanderson)
# this is just a list of the names of the variables in the file
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18
attach(dat)
#####################################
col05="dark gray";
col07="brown";
col14="blue";
col15="dark green";
col18="red";
# get the 05 data. Tp is total plants
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.
krumave=tapply(dat$Tp.05,krumclass,mean)
krumcount=tapply(dat$Tp.05,krumclass,length)
# xpoints are the distances along the linear transect in meters
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)
# model of plant abundance as function of krummholz
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
lines(xpoints,pred1,col=col05,lwd=2)
# point to wherever your data files are
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/")
dat<- read.csv("data/Transect_1_all.csv", header=T)
head(dat)
library(ggplot2)
library(cowplot)
library(wesanderson)
# this is just a list of the names of the variables in the file
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18
attach(dat)
#####################################
col05="dark gray";
col07="brown";
col14="blue";
col15="dark green";
col18="red";
# get the 05 data. Tp is total plants
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.
krumave=tapply(dat$Tp.05,krumclass,mean)
krumcount=tapply(dat$Tp.05,krumclass,length)
# xpoints are the distances along the linear transect in meters
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)
# model of plant abundance as function of krummholz
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
lines(xpoints,pred1,col=col05,lwd=2)
# point to wherever your data files are
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/")
dat<- read.csv("data/Transect_1_all.csv", header=T)
head(dat)
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not
# included.
library(ggplot2)
library(cowplot)
library(wesanderson)
# this is just a list of the names of the variables in the file
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18
attach(dat)
#####################################
col05="dark gray";
col07="brown";
col14="blue";
col15="dark green";
col18="red";
# get the 05 data. Tp is total plants
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.
krumave=tapply(dat$Tp.05,krumclass,mean)
krumcount=tapply(dat$Tp.05,krumclass,length)
# xpoints are the distances along the linear transect in meters
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)
# model of plant abundance as function of krummholz
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col05,lwd=2)
summary(mod1)
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))
# now same for 07
krumclass=(trunc(dat$Krum.07/10))*10
krumave=tapply(dat$Tp.07,krumclass,mean)
krumcount=tapply(dat$Tp.07,krumclass,length)
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col07,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))
# now same for 14
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14
krumclass=(trunc(dat$Krum.14/10))*10
krumave=tapply(dat$Tp.14,krumclass,mean)
krumcount=tapply(dat$Tp.14,krumclass,length)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col14,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))
# now same for 15
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15
krumclass=(trunc(dat$Krum.15/10))*10
krumave=tapply(dat$Tp.15,krumclass,mean)
krumcount=tapply(dat$Tp.15,krumclass,length)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col15,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))
#now plot all the data
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x, size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# point to wherever your data files are
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/")
dat<- read.csv("data/Transect_1_all.csv", header=T)
head(dat)
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not
# included.
library(ggplot2)
library(cowplot)
library(wesanderson)
# this is just a list of the names of the variables in the file
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18
attach(dat)
#####################################
col05="dark gray";
col07="brown";
col14="blue";
col15="dark green";
col18="red";
# get the 05 data. Tp is total plants
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.
krumave=tapply(dat$Tp.05,krumclass,mean)
krumcount=tapply(dat$Tp.05,krumclass,length)
# xpoints are the distances along the linear transect in meters
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)
# model of plant abundance as function of krummholz
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col05,lwd=2)
summary(mod1)
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))
# now same for 07
krumclass=(trunc(dat$Krum.07/10))*10
krumave=tapply(dat$Tp.07,krumclass,mean)
krumcount=tapply(dat$Tp.07,krumclass,length)
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col07,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))
# now same for 14
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14
krumclass=(trunc(dat$Krum.14/10))*10
krumave=tapply(dat$Tp.14,krumclass,mean)
krumcount=tapply(dat$Tp.14,krumclass,length)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col14,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))
# now same for 15
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15
krumclass=(trunc(dat$Krum.15/10))*10
krumave=tapply(dat$Tp.15,krumclass,mean)
krumcount=tapply(dat$Tp.15,krumclass,length)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col15,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))
#now plot all the data
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x, size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig3.pdf",height=4.5,width=8)
# point to wherever your data files are
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/")
dat<- read.csv("data/Transect_1_all.csv", header=T)
head(dat)
# this script is just a bunch of manipulation of the associated data table to get the percent krummholz cover and
# total number of plants for each year in the dataset. We don't have % Krummholz data for 2018 so that year is not
# included.
library(ggplot2)
library(cowplot)
library(wesanderson)
# this is just a list of the names of the variables in the file
# Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05 Krum.05 Rock.05
#  X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5 X.6 Dp.14 HHp.14 MSp.14 Up.14
#  Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15 local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15
#  HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi..15 Ui.15 Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18
#  Di.18 HHi.18 MSi.18 Ui.18 X.12 Tp.18
attach(dat)
#####################################
col05="dark gray";
col07="brown";
col14="blue";
col15="dark green";
col18="red";
# get the 05 data. Tp is total plants
dat$Tp.05=Dp.05 +HHp.05 +MSp.05 +Up.05
krumclass=(trunc(dat$Krum.05*10))*10 # note that data in 05 were scaled to 1, hence the difference in the operation here vs the subsequent years which divide by 10.
krumave=tapply(dat$Tp.05,krumclass,mean)
krumcount=tapply(dat$Tp.05,krumclass,length)
# xpoints are the distances along the linear transect in meters
xpoints=c(0,10,20,30,40,50,60,70,80,90,100)
# model of plant abundance as function of krummholz
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col05,lwd=2)
summary(mod1)
df<-data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2005",11))
# now same for 07
krumclass=(trunc(dat$Krum.07/10))*10
krumave=tapply(dat$Tp.07,krumclass,mean)
krumcount=tapply(dat$Tp.07,krumclass,length)
xpoints=c(0,10,20,30,40, 50, 60,70,80,90,100)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col07,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2007",11)))
# now same for 14
dat$Tp.14=dat$Dp.14+dat$HHp.14 +dat$MSp.14 +dat$Up.14
krumclass=(trunc(dat$Krum.14/10))*10
krumave=tapply(dat$Tp.14,krumclass,mean)
krumcount=tapply(dat$Tp.14,krumclass,length)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col14,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2014",11)))
# now same for 15
dat$Tp.15=dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15
krumclass=(trunc(dat$Krum.15/10))*10
krumave=tapply(dat$Tp.15,krumclass,mean)
krumcount=tapply(dat$Tp.15,krumclass,length)
mod1=lm(krumave~xpoints+I(xpoints^2),weight=krumcount)
pred1=predict(mod1,type="response")
#lines(xpoints,pred1,col=col15,lwd=2)
summary(mod1)
df<-rbind(df,data.frame(x=xpoints,y=krumave,z=sqrt(krumcount/10),w=krumcount,year=rep("2015",11)))
#now plot all the data
ggplot(df,aes(x,y,size=z,col=year,weight=w))+geom_point()+stat_smooth(method = "lm", formula = y ~ x, size = 0.6,alpha=0.05)+scale_color_manual(values=wes_palette("Darjeeling2"))+ylim(c(0,17))+xlab("Krummholz % cover")+ylab(expression("plants per " * m^2))+scale_size_continuous(guide=F)+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggsave("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/figures/Fig3.pdf",height=4.5,width=8)
# point to wherever your data files are
setwd("/Users/uricchio/projects/bootslabOld/anther_smut/manuscript/v2/software/simAnthSmut/")
dat<- read.csv("data/Transect_1_all.csv", header=T)
library(boot)
library(ggplot2)
library(cowplot)
library(wesanderson)
#quad quality
head(dat,1)
#  Section.07 Y.orig Xorig Y X X.2 Yplot Xplot X.3 Dp.05 HHp.05 MSp.05 Up.05 Di.05 HHi.05 MSi.05 Ui.05
#  Krum.05 Rock.05 X.4 Dp.07 HHp.07 MSp.07 Up.07 Di.07 HHi.07 MSi.07 Ui.07 Krum.07 Rock.07 Tp.07 X.5
#  X.6 Dp.14 HHp.14 MSp.14 Up.14 Di.14 HHi.14 MSi.14 Ui.14 Krum.14 Tp.14 X.7 Section.15 local.x.15
#  local.y.15 yplot.15 xplot.15 X.8 Krum.15 Dp.15 HHp.15 MSp.15 Up.15 Di.15 Hhi.15 MSi.15 Ui.15
#  Rock.15 X.9 X.10 X.11 Section.18 X.1 Y.1 Dp.18 HHp.18 MSp.18 Up.18 Di.18 HHi.18 MSi.18 Ui.18 X.12
#  Tp.18
# creating a data frame for each sampled year from 2005 to 2018
# Dp is the diseased plants, total plants is the sum of the Dp, HHp, etc
# prevalence is just the mean
df0<-data.frame(x=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),y=tapply(round(dat$Dp.05,0)/(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0)),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),mean),z=tapply(round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),round(dat$Dp.05,0)+ round(dat$HHp.05,0)+round(dat$MSp.05,0)+round(dat$Up.05,0),length))
df0<-cbind(df0,data.frame(year=rep(2005,length(df0$x))))
df1<-data.frame(x=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),y=tapply(dat$Dp.07/(dat$Dp.07+dat$HHp.07+dat$MSp.07+dat$Up.07),dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,mean),z=tapply(dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,dat$Dp.07+ dat$HHp.07+dat$MSp.07+dat$Up.07,length))
df1<-cbind(df1,data.frame(year=rep(2007,length(df1$x))))
df2<-data.frame(x=tapply(dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),y=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,mean),z=tapply(dat$Dp.14/(dat$Dp.14+dat$HHp.14+dat$MSp.14+dat$Up.14),dat$Dp.14+ dat$HHp.14+dat$MSp.14+dat$Up.14,length))
df2<-cbind(df2,data.frame(year=rep(2014,length(df2$x))))
df3<-data.frame(x=tapply(dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),y=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,mean),z=tapply(dat$Dp.15/(dat$Dp.15+dat$HHp.15+dat$MSp.15+dat$Up.15),dat$Dp.15+ dat$HHp.15+dat$MSp.15+dat$Up.15,length))
df3<-cbind(df3,data.frame(year=rep(2015,length(df3$x))))
df4<-data.frame(x=tapply(dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),y=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,mean),z=tapply(dat$Dp.18/(dat$Dp.18+dat$HHp.18+dat$MSp.18+dat$Up.18),dat$Dp.18+ dat$HHp.18+dat$MSp.18+dat$Up.18,length))
df4<-cbind(df4,data.frame(year=rep(2018,length(df4$x))))
# combining all the data
df<-rbind(df0,df1,df2,df3,df4)
# plotting the data
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plA
lm(df$y[df$year==2014]~df$x[df$year==2014])
lm(df$y[df$year==2014]~df$x[df$year==2014],weights=df$z[df$year==2014])
new_line<-lm(df$y[df$year==2014]~df$x[df$year==2014],weights=df$z[df$year==2014])
predict(new_line,seq(1,10))
predict(new_line,data.frame(x=seq(1,10)))
predict(new_line,data.frame(x=seq(1,27)))
predict(new_line,data.frame(x=seq(1,50)))
predict(new_line,data.frame(x=seq(1,27)))
plA+geom_line(data=data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27)))))
plA+geom_line(data=data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27)))),year=2022)
plA
plA+geom_line(data=data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27))),year=2022))
plA+geom_line(data=data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27))),z=10,year=2022))
data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27))),z=10,year=2022))
data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27))),z=10,year=2022)
mydata<-data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27))),z=10,year=2022)
plA+geom_line(data=mydata,aes(x,y))
mydata<-data.frame(x=seq(1,27),y=predict(new_line,data.frame(x=seq(1,27))),z=10,year=2014)
plA+geom_line(data=mydata,aes(x,y))
plA+geom_line(data=mydata,aes(x,y),size=0.1)
plA+geom_line(data=mydata,aes(x,y),size=0.1,color='red')
plA+geom_line(data=mydata,aes(x,y),color='red')
plA+geom_line(data=mydata,aes(x,y),color='red',size=0.5)
lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005])
lm(df$y[df$year==2007]~df$x[df$year==2007],weights=df$z[df$year==2007])
lm(df$y[df$year==2014]~df$x[df$year==2014],weights=df$z[df$year==2014])
lm(df$y[df$year==2015]~df$x[df$year==2015],weights=df$z[df$year==2015])
lm(df$y[df$year==2018]~df$x[df$year==2018],weights=df$z[df$year==2018])
summary(lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005]))
summary(lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005]))
summary(lm(df$y[df$year==2007]~df$x[df$year==2007],weights=df$z[df$year==2007]))
summary(lm(df$y[df$year==2014]~df$x[df$year==2014],weights=df$z[df$year==2014]))
summary(lm(df$y[df$year==2015]~df$x[df$year==2015],weights=df$z[df$year==2015]))
summary(lm(df$y[df$year==2018]~df$x[df$year==2018],weights=df$z[df$year==2018]))
summary(lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005]))
plA
summary(lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005]))
lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005])
lm(df$y[df$year==2005]~df$x[df$year==2007],weights=df$z[df$year==2007])
lm(df$y[df$year==2007]~df$x[df$year==2007],weights=df$z[df$year==2007])
summary(lm(df$y[df$year==2007]~df$x[df$year==2007],weights=df$z[df$year==2007]))
summary(lm(df$y[df$year==2014]~df$x[df$year==2014],weights=df$z[df$year==2014]))
summary(lm(df$y[df$year==2015]~df$x[df$year==2015],weights=df$z[df$year==2015]))
summary(lm(df$y[df$year==2018]~df$x[df$year==2018],weights=df$z[df$year==2018]))
summary(lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005]))
summary(lm(df$y[df$year==2005]~df$x[df$year==2005],weights=df$z[df$year==2005]))
summary(lm(df$y[df$year==2007]~df$x[df$year==2007],weights=df$z[df$year==2007]))
summary(lm(df$y[df$year==2014]~df$x[df$year==2014],weights=df$z[df$year==2014]))
summary(lm(df$y[df$year==2015]~df$x[df$year==2015],weights=df$z[df$year==2015]))
summary(lm(df$y[df$year==2018]~df$x[df$year==2018],weights=df$z[df$year==2018]))
# plotting the data
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plA
plA<-ggplot(df,aes(x,y,color=as.factor(year),size=sqrt(z)))+geom_smooth(method='lm',se=FALSE,mapping = aes(weight =z))+geom_point(alpha=0.4)+scale_color_manual(values=wes_palette("Darjeeling2"),name="year")+scale_x_continuous(limits=c(1,50),name="density",breaks=c(1,5,10,15,20,25,30,35,40,45,50))+scale_y_continuous(limits=c(0,1),name="prevalence")+scale_size(guide='none')+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plA
